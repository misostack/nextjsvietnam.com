<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nestjs on Useful NodeJS Tricks, JavaScript Tips, Tricks and Best Practices</title><link>https://nextjsvietnam.com/tags/nestjs/</link><description>Recent content in nestjs on Useful NodeJS Tricks, JavaScript Tips, Tricks and Best Practices</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 06 Jul 2023 21:52:16 +0700</lastBuildDate><atom:link href="https://nextjsvietnam.com/tags/nestjs/index.xml" rel="self" type="application/rss+xml"/><item><title>Khóa học NestJS - Bài 06 Hướng dẫn viết Unit Test</title><link>https://nextjsvietnam.com/post/khoa-hoc-nestjs-bai-06-viet-unit-test/</link><pubDate>Thu, 06 Jul 2023 21:52:16 +0700</pubDate><guid>https://nextjsvietnam.com/post/khoa-hoc-nestjs-bai-06-viet-unit-test/</guid><description>Lession 06 Source Code Bài 06 Giới thiệu sơ qua về Unit Test Cách test một service trong NestJS Hướng dẫn debug unit test trong NestJS Ứng dụng viết Unit Test cho PetCategory Đầu tiên, các anh/chị có thể thấy rằng sẽ có một mối quan hệ mật thiết giữa 3 thứ trong ngành này: errors/bugs(lỗi), stress(căng thẳng), tests(kiểm tra)
Càng nhiều lỗi (errors/bugs) thì càng căng thẳng(stress) Càng căng thẳng(stress) thì càng tạo ra nhiều lỗi(errors/bugs) Càng kiểm tra nhiều(test) thì càng ít lỗi(errors/bugs) do đã phát hiện và được sửa Càng ít lỗi(errors/bugs) thì càng ít cằng thẳng(stress) Do đó, việc test nhiều/kĩ sẽ đảm bảo được các anh/chị sẽ ít căng thẳng(stress) hơn.</description></item><item><title>Khóa học NestJS Bài 05 - Repository Pattern</title><link>https://nextjsvietnam.com/post/khoa-hoc-nestjs-bai-05-repository-pattern/</link><pubDate>Thu, 06 Jul 2023 21:46:31 +0700</pubDate><guid>https://nextjsvietnam.com/post/khoa-hoc-nestjs-bai-05-repository-pattern/</guid><description>Lession 05 Source Code Bài 05 Giới thiệu sơ qua về repository pattern Giới thiệu về dependency injection trong NestJS Refactor code PetCategory áp dụng repository pattern Giới thiệu sơ qua về repository pattern Trong bài trước, các anh chị có thể thấy sơ đồ sau trong mô hình MVC
Controller sử dụng trực tiếp Model của ORM để thực hiện truy vấn vào cơ sở dữ liệu.</description></item><item><title>Khóa học NestJS Bài 04 - Model and Repository Pattern</title><link>https://nextjsvietnam.com/post/khoa-hoc-nestjs-bai-04-model-and-repository-pattern/</link><pubDate>Mon, 03 Jul 2023 14:29:29 +0700</pubDate><guid>https://nextjsvietnam.com/post/khoa-hoc-nestjs-bai-04-model-and-repository-pattern/</guid><description>Source Code Lession 04 Source Code Bài 04 Giới thiệu sơ qua về một số ORM phổ biến : Sequelize Tìm hiểu về ActiveRecord Pattern Ứng dụng để tạo database schema với Sequelize trong NestJS Ứng dụng thêm,xóa,sửa,tìm kiếm với Model cho PetCategory Ứng dụng để tạo data seed trong NestJS Cấu hình cho NestJS làm với với MySQL thông qua Sequelize Đầu tiên bạn cần tạo database trước Database name : nestjs_tutorial_2023</description></item><item><title>Khóa học NestJS Bài 03 - Controllers &amp; Views</title><link>https://nextjsvietnam.com/post/khoa-hoc-nestjs-bai03/</link><pubDate>Wed, 21 Jun 2023 14:59:42 +0700</pubDate><guid>https://nextjsvietnam.com/post/khoa-hoc-nestjs-bai03/</guid><description>Source Code Lession 03 Source Code Bài 03 Tìm hiểu về module trong NestJS - ứng dụng xây dựng cấu trúc thư mục cho Pet Website Tìm hiểu về EJS và cách tạo layout chung Làm việc với form và kiểm tra dữ liệu đầu vào Tổng quan Mô hình MVC Phía trên mô hình luồng dữ liệu từ khi người dùng thực hiện yêu cầu cho đến khi nhận được kết quả.</description></item><item><title>Khóa học Nestjs - Bài 02 - Giới thiệu mô hình MVC</title><link>https://nextjsvietnam.com/post/khoa-hoc-nestjs-bai-02/</link><pubDate>Tue, 20 Jun 2023 14:57:33 +0700</pubDate><guid>https://nextjsvietnam.com/post/khoa-hoc-nestjs-bai-02/</guid><description>Source Code Session 002 Source Code Bài 02 Phân tích yêu cầu thiết kế sơ bộ Thiết lập cấu trúc dự án Giới thiệu tổng quan về các lớp trong mô hình MVC và code thực hành Phân tích yêu cầu Sitemap Functional details Thiết kế cơ sở dữ liệu Thiết lập cấu trúc dự án Tạo 1 dự án mới với NestJS Cấu trúc thư mục dự án theo cấu trúc module và mô hình MVC Debug dự án NestJS với VSCode Tạo 1 dự án mới với NestJS nest new nestjs-tutorial-2023 --skip-install cd nestjs-tutorial-2023 npm i Sau khi khởi tạo dự án , cấu trúc cây thư mục của dự án sẽ giống như hình bên dưới:</description></item><item><title>Khóa học NestJS - Bài 01 - Lộ trình các bài học về NestJS Framework</title><link>https://nextjsvietnam.com/post/khoa-hoc-nestjs/</link><pubDate>Fri, 19 May 2023 22:00:00 +0700</pubDate><guid>https://nextjsvietnam.com/post/khoa-hoc-nestjs/</guid><description>Note: Toàn bộ mã nguồn của khóa học này đều được công khai trên github tại NestJS Tutorial 2023
Trước khi bắt đầu nội dung chi tiết của khóa học này, tôi sẽ liệt kê một số câu hỏi thường gặp, cũng như câu trả lời của nó.
Lời nói đầu Câu hỏi số 1 : Tại sao khóa học này xuất hiện? Câu trả lời là &amp;ldquo;Niềm tự hào dân tộc&amp;rdquo;.</description></item><item><title>Build Restful Api With Nestjs the Right Way</title><link>https://nextjsvietnam.com/post/build-restful-api-with-nestjs-the-right-way/</link><pubDate>Sun, 30 Oct 2022 06:00:00 +0700</pubDate><guid>https://nextjsvietnam.com/post/build-restful-api-with-nestjs-the-right-way/</guid><description>Foreword
If you are new with NestJS or you have been worked with it for several projects, this post is for you. In this article, I&amp;rsquo;ll share with you the real world process to build a Restful API from scratch with NestJS
Okie, let&amp;rsquo;s start. Imagination, we&amp;rsquo;ve already have detail specifications. This is our requirements in this sample:
Create Restful API for a image storage service that allow:</description></item><item><title>The Best Way to Upload File in Nestjs</title><link>https://nextjsvietnam.com/post/the-best-way-to-upload-file-in-nestjs/</link><pubDate>Wed, 10 Aug 2022 17:01:06 +0700</pubDate><guid>https://nextjsvietnam.com/post/the-best-way-to-upload-file-in-nestjs/</guid><description>In the last topic, we&amp;rsquo;ve already learn how to upload file with Multer. In this post, I wanna share with you the NestJS&amp;rsquo;s best practice to upload file.
Firstly, we need to install type safe for multer in case you didn&amp;rsquo;t.
npm i -D @types/multer In real world projects, we may have to allow user upload a single file or multiple files. With multer we need to define with the target route, we will upload single or multiple.</description></item><item><title>Nestjs Request and Response Object</title><link>https://nextjsvietnam.com/post/nestjs-request-and-response-object/</link><pubDate>Fri, 05 Aug 2022 10:06:04 +0700</pubDate><guid>https://nextjsvietnam.com/post/nestjs-request-and-response-object/</guid><description>Note: All of demo source code you can find our in github nestjs boilerplate
As you&amp;rsquo;ve known, in a request we will have:
Route Params ( included in URL ) Query Params ( included in URL ) Body ( json/form-data/multipart/form-data ) There are 2 ways to get these values
Library specific Approach - Express import { Controller, Req, Res } from &amp;#34;@nestjs/common&amp;#34;; import { Request, Response } from &amp;#34;express&amp;#34;; @Controller(&amp;#34;examples&amp;#34;) export class ExamplesController { @Post(&amp;#34;request-object/express/:email&amp;#34;) exampleRequestObjectExpress(@Req() req: Request, @Res() res: Response) { const responseData = { approach: &amp;#34;express&amp;#34;, routeParams: req.</description></item><item><title>Nestjs Pipes</title><link>https://nextjsvietnam.com/post/nestjs-pipes/</link><pubDate>Thu, 04 Aug 2022 10:46:09 +0700</pubDate><guid>https://nextjsvietnam.com/post/nestjs-pipes/</guid><description>Note: All of demo source code you can find our in github nestjs boilerplate
What is Pipe?
A pipe is a class annotated with the @Injectable() decorator, which implements the PipeTransform interface
Pipes operate on the arguments being processed by a controller route handler.
Nest interposes a pipe just before a method is invoked, and the pipe receives the arguments destined for the method and operates on them</description></item><item><title>Validate Request Input in Nestjs</title><link>https://nextjsvietnam.com/post/validate-request-input-in-nestjs/</link><pubDate>Fri, 29 Jul 2022 15:17:27 +0700</pubDate><guid>https://nextjsvietnam.com/post/validate-request-input-in-nestjs/</guid><description>Note: All of demo source code you can find our in github nestjs boilerplate
It is best practice to validate the correctness of any data sent into a web application
There are several libraries support us to verify data :
json schema joi validator And in typescript, we have a special library that support decorator
Class Validator - internally uses validator.js to perform validation. Class-validator works on both browser and node.</description></item><item><title>Nestjs Provider</title><link>https://nextjsvietnam.com/post/nestjs-provider/</link><pubDate>Thu, 28 Jul 2022 14:41:08 +0700</pubDate><guid>https://nextjsvietnam.com/post/nestjs-provider/</guid><description>Note: All of demo source code you can find our in github nestjs boilerplate
Many of the basic Nest classes may be treated as a provider:
Services Repositories Factories Helpers The main idea of a provider is that it can be injected as a dependency
This means NestJS will be act as a container and creating relationship between objects and wire them up at runtime
When creating a provider, we should consider these aspects</description></item><item><title>Developer Your Rest Api With Nestjs</title><link>https://nextjsvietnam.com/post/developer-your-rest-api-with-nestjs/</link><pubDate>Tue, 12 Jul 2022 11:39:11 +0700</pubDate><guid>https://nextjsvietnam.com/post/developer-your-rest-api-with-nestjs/</guid><description>Ứng dụng Xây dựng REST API cung cấp dữ liệu thời gian thực giá vàng
Tính năng cập nhật giá vàng Cập nhật giá vàng theo ngày : nhập thông thường Cập nhật giá vàng hàng loạt: import tập tin excel theo định dạng Cập nhật giá vàng tự động: thiết lập link liên kết lấy giá vàng, khoảng thời gian lấy Tính năng hiển thị giá vàng Dạng hiện thị : dạng bảng hoặc dạng biểu đồ</description></item></channel></rss>