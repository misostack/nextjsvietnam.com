<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software-architecture on Useful NodeJS Tricks, JavaScript Tips, Tricks and Best Practices</title><link>https://nextjsvietnam.com/tags/software-architecture/</link><description>Recent content in software-architecture on Useful NodeJS Tricks, JavaScript Tips, Tricks and Best Practices</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 03 Sep 2023 09:39:41 +0700</lastBuildDate><atom:link href="https://nextjsvietnam.com/tags/software-architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>UML Use Case Diagram Cheatsheet</title><link>https://nextjsvietnam.com/post/uml-use-case-diagram-cheatsheet/</link><pubDate>Sun, 03 Sep 2023 09:39:41 +0700</pubDate><guid>https://nextjsvietnam.com/post/uml-use-case-diagram-cheatsheet/</guid><description>Four main characteristics of Use Case Diagrams:
1. Systems
A system is whatever you&amp;rsquo;re developing. It could be a website, a software component, a business process, an app, or any number of other things. You represent a system with a rectangle. 2. Actors
An actor is going to be someone or something that uses our system to achieve a goal, and they&amp;rsquo;re represented by a stick figure.</description></item><item><title>The Meaning of Software Architecture</title><link>https://nextjsvietnam.com/post/the-meaning-of-software-architecture/</link><pubDate>Mon, 31 Jul 2023 10:19:02 +0700</pubDate><guid>https://nextjsvietnam.com/post/the-meaning-of-software-architecture/</guid><description>What makes up a software architecture? Software Architecture of a program or computing system is the structure of structures of the system, which comprise software elements, the externally visible properties of those elements, and the relationships between them.
Nowadays, software development methodologies focus on developing highly adaptive software, can be easily changed over time, resulting in less of a need for rigid, upfront planning. However, software architecture still consists of early design decisions that can be difficult to change later.</description></item></channel></rss>