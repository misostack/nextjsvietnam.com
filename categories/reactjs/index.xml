<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>reactjs on Useful NodeJS Tricks, JavaScript Tips, Tricks and Best Practices</title><link>https://nextjsvietnam.com/categories/reactjs/</link><description>Recent content in reactjs on Useful NodeJS Tricks, JavaScript Tips, Tricks and Best Practices</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 16 Mar 2023 01:49:48 +0700</lastBuildDate><atom:link href="https://nextjsvietnam.com/categories/reactjs/index.xml" rel="self" type="application/rss+xml"/><item><title>React Multi Language App</title><link>https://nextjsvietnam.com/post/react-multi-language-app/</link><pubDate>Thu, 16 Mar 2023 01:49:48 +0700</pubDate><guid>https://nextjsvietnam.com/post/react-multi-language-app/</guid><description>The key is using the right tool. I&amp;rsquo;ve find out i18n-next is the best one for javascript ecosystem. It also supports ReactJS, VueJS, Angular, and many
Here is your tips
npm install react-i18next i18next --save yarn add react-i18next i18next i18next-icu Create your I18nAdapter
import { createInstance } from &amp;#34;i18next&amp;#34;; import { initReactI18next } from &amp;#34;react-i18next&amp;#34;; import { i18nActiveLanguage } from &amp;#34;./i18n-switcher&amp;#34;; import ICU from &amp;#34;i18next-icu&amp;#34;; import en from &amp;#34;./en&amp;#34;; import vn from &amp;#34;.</description></item><item><title>Reactjs Use Reducer the Right Way</title><link>https://nextjsvietnam.com/post/reactjs-use-reducer-the-right-way/</link><pubDate>Sat, 08 Oct 2022 23:11:52 +0700</pubDate><guid>https://nextjsvietnam.com/post/reactjs-use-reducer-the-right-way/</guid><description>Trong các dự án thực tế, việc 1 component chứa quá nhiều code thực hiện update states thông qua việc xử lý các sự kiện tương ứng của người dùng, sẽ khiến chúng ta thực sự bị choáng ko hề nhẹ. Do đó thay vì có 1 đống code bên trong component lần lượt setState cho từng event một, ReactJS cung cấp cho chúng ta 1 công cụ gọi là &amp;ldquo;Reducer&amp;rdquo;, giúp chúng ta xử lý logic cho toàn bộ state trong component này 1 một gọn gàng.</description></item><item><title>Manage Your Reactjs State the Right Way</title><link>https://nextjsvietnam.com/post/manage-your-reactjs-state-the-right-way/</link><pubDate>Wed, 05 Oct 2022 14:31:27 +0700</pubDate><guid>https://nextjsvietnam.com/post/manage-your-reactjs-state-the-right-way/</guid><description>Các khái niệm cần nắm trước khi đọc bài viết này:
Khái niệm cơ bản về React State Khái niệm cơ bản về React Hook Nội dung được chia sẻ phạm vi bài viết này:
Các nguyên tắc khi thiết kế data structure cho state Một số ví dụ cụ thể trong các dự án thực tế Phần 1: Các nguyên tắc khi thiết kế data structure cho state Về mặt định nghĩa, thì State trong ReactJS là 1 Javascript Object phản ánh phần dữ liệu của component và có thể bị thay đổi giá trị do các tác nhân trong ứng dụng ( người dùng, web worker, web socket, &amp;hellip;)</description></item><item><title>Tim Hieu Ve Props Va State Trong Reactjs</title><link>https://nextjsvietnam.com/post/tim-hieu-ve-props-va-state-trong-reactjs/</link><pubDate>Tue, 12 Jul 2022 15:14:47 +0700</pubDate><guid>https://nextjsvietnam.com/post/tim-hieu-ve-props-va-state-trong-reactjs/</guid><description/></item><item><title>Create New Spa With Reactjs</title><link>https://nextjsvietnam.com/post/create-new-spa-with-reactjs/</link><pubDate>Tue, 12 Jul 2022 14:23:31 +0700</pubDate><guid>https://nextjsvietnam.com/post/create-new-spa-with-reactjs/</guid><description/></item></channel></rss>