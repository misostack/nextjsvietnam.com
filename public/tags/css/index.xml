<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css on Useful NodeJS Tricks, JavaScript Tips, Tricks and Best Practices</title>
    <link>http://localhost:1313/tags/css/</link>
    <description>Recent content in Css on Useful NodeJS Tricks, JavaScript Tips, Tricks and Best Practices</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 May 2024 20:59:44 +0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Flexbox and Real World Examples</title>
      <link>http://localhost:1313/post/flexbox-and-real-world-examples/</link>
      <pubDate>Wed, 01 May 2024 20:59:44 +0700</pubDate>
      <guid>http://localhost:1313/post/flexbox-and-real-world-examples/</guid>
      <description>&lt;p&gt;Flexbox is a powerful CSS layout mode that allows for the efficient arrangement of items within a container, even when their size is unknown or dynamic. Flexbox makes it easy to align elements, distribute space, and handle various alignment challenges that were tricky with older CSS properties.&lt;/p&gt;&#xA;&lt;h2 id=&#34;key-concepts-of-flexbox&#34;&gt;Key Concepts of Flexbox&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flex Container&lt;/strong&gt;: The element that you apply display: flex or display: inline-flex to becomes the flex container. Its direct children become flex items.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flex Items&lt;/strong&gt;: Elements inside the flex container that can be automatically laid out using flex properties.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Main Axis and Cross Axis&lt;/strong&gt;: The main axis is defined by the flex-direction property, which can be row (default) or column. The cross axis is perpendicular to the main axis.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Justify Content&lt;/strong&gt;: &lt;strong&gt;Aligns items along the main axis&lt;/strong&gt; and can be set to flex-start, flex-end, center, space-between, space-around, or space-evenly.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Align Items&lt;/strong&gt;: &lt;strong&gt;Aligns items on the cross axis&lt;/strong&gt; and can be set to flex-start, flex-end, center, baseline, or stretch.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flex Grow, Flex Shrink, and Flex Basis&lt;/strong&gt;: Control the &lt;strong&gt;sizing of items within a flex container&lt;/strong&gt;. flex-grow defines the ability for an item to grow if necessary, flex-shrink deals with how items shrink when there isn&amp;rsquo;t enough space, and flex-basis sets the initial size of an item.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;examples-using-tailwind-css&#34;&gt;Examples Using Tailwind CSS&lt;/h3&gt;&#xA;&lt;h4 id=&#34;example-1-basic-flexbox-layout&#34;&gt;Example 1: Basic Flexbox Layout&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;flex justify-center items-center&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p-4 bg-blue-500 text-white&amp;#34;&lt;/span&gt;&amp;gt;Item 1&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p-4 bg-red-500 text-white&amp;#34;&lt;/span&gt;&amp;gt;Item 2&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p-4 bg-green-500 text-white&amp;#34;&lt;/span&gt;&amp;gt;Item 3&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This layout centers items both vertically and horizontally inside a flex container.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
