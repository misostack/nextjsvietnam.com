<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software-Architecture on Useful NodeJS Tricks, JavaScript Tips, Tricks and Best Practices</title>
    <link>http://localhost:1313/categories/software-architecture/</link>
    <description>Recent content in Software-Architecture on Useful NodeJS Tricks, JavaScript Tips, Tricks and Best Practices</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Sep 2023 09:39:41 +0700</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/software-architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UML Use Case Diagram Cheatsheet</title>
      <link>http://localhost:1313/post/uml-use-case-diagram-cheatsheet/</link>
      <pubDate>Sun, 03 Sep 2023 09:39:41 +0700</pubDate>
      <guid>http://localhost:1313/post/uml-use-case-diagram-cheatsheet/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Four main characteristics of Use Case Diagrams:&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/31009750/265240471-b9f92411-fc10-4d2a-ace1-b1a4d3dad5eb.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1. Systems&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A system is whatever you&amp;rsquo;re developing. It could be a website, a software component, a business process, an app, or any number of other things. You represent a system with a &lt;strong&gt;rectangle&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;2. Actors&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;An actor is going to be someone or something that uses our system to achieve a goal, and they&amp;rsquo;re represented by a stick figure.&lt;/li&gt;&#xA;&lt;li&gt;An actor has to interact with least one action&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;3. Use Cases&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Meaning of Software Architecture</title>
      <link>http://localhost:1313/post/the-meaning-of-software-architecture/</link>
      <pubDate>Mon, 31 Jul 2023 10:19:02 +0700</pubDate>
      <guid>http://localhost:1313/post/the-meaning-of-software-architecture/</guid>
      <description>&lt;h2 id=&#34;what-makes-up-a-software-architecture&#34;&gt;What makes up a software architecture?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/31009750/257109485-9c60867e-e7fa-43c3-9251-5b86e69ca535.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Software Architecture of a program or computing system is the structure of structures of the system, which comprise software elements, the externally visible properties of those elements, and the relationships between them.&lt;/p&gt;&#xA;&lt;p&gt;Nowadays, software development methodologies focus on developing highly adaptive software, can be easily changed over time, resulting in less of a need for rigid, upfront planning. However, software architecture still &lt;strong&gt;consists of early design decisions&lt;/strong&gt; that can be &lt;strong&gt;difficult to change&lt;/strong&gt; later.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
